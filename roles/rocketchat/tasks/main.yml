---

- name: selinux permissive
  selinux:
    policy: targeted
    state: permissive
  become: yes

- name: setup mongo repo
  yum_repository:
    file: mongodb-org-4.0
    name: mongodb-org-4.0
    description: MongoDB Repository
    baseurl: https://repo.mongodb.org/yum/redhat/8/mongodb-org/4.0/x86_64/
    gpgcheck: yes
    gpgkey: https://www.mongodb.org/static/pgp/server-4.0.asc
    enabled: yes
  become: yes

- name: setup nodesource repo
  yum:
    name: https://rpm.nodesource.com/pub_12.x/el/8/x86_64/nodesource-release-el8-1.noarch.rpm
    state: installed
    disable_gpg_check: yes
  become: yes

- name: enable epel
  yum:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    state: installed
  become: yes

- name: install python3
  yum:
    name: python3
    state: installed
  become: yes

- name: install nodejs from nodesource repo
  yum:
    state: installed
    name: nodejs
    disablerepo: rhel-8-appstream-rhui-rpms,rhui-rhel-8-appstream-rhui-rpms
  become: yes

- name: install packages
  yum:
    state: installed
    name:
    - gcc-c++ 
    - make 
    - mongodb-org 
    - GraphicsMagick
  become: yes

- name: check for existing install
  stat:
    path: /opt/Rocket.Chat
  register: rocket_installed

- name: get rocketchat and unpack
  unarchive:
    src: https://releases.rocket.chat/{{ rocket_version }}/download
    dest: "{{ ansible_user_dir }}"
    remote_src: yes
    owner: "{{ ansible_user_id }}"
  when: not rocket_installed.stat.exists

- name: install npm inherits
  npm:
    name: inherits
    global: yes
  become: yes

- name: npm build
  npm:
    path: "{{ ansible_user_dir }}/bundle/programs/server"
  when: not rocket_installed.stat.exists

- name: move build to /opt/Rocket.Chat
  copy:
    src: "{{ ansible_user_dir }}/bundle/"
    dest: /opt/Rocket.Chat
    remote_src: yes
  become: yes
  when: not rocket_installed.stat.exists

- name: create rocket user 
  user:
    name: rocketchat
  become: yes

- name: rocket user to own /opt/Rocket.Chat
  file:
    path: /opt/Rocket.Chat
    state: directory
    recurse: yes
    owner: rocketchat
    group: rocketchat
  become: yes

- name: template out rocketchat.service file
  template:
    src: rocketchat.service.j2
    dest: /lib/systemd/system/rocketchat.service
    mode: 0644
    owner: root
    group: root
  become: yes

- name: mongod config mmpav1
  replace:
    path: /etc/mongod.conf
    regexp: '#  engine:'
    replace: '  engine: mmapv1'
  become: yes

- name: mongod config replication
  replace:
    path: /etc/mongod.conf
    regexp: '^#replication:'
    replace: 'replication:\n  replSetName: rs01'
  become: yes

- name: start and enable mongod
  service:
    name: mongod
    state: started
    enabled: yes
  become: yes

- name: initiate mongodb replicaset
  command: mongo --eval "printjson(rs.initiate())"
  register: mongo_init
  changed_when: "'AlreadyInitialized' not in mongo_init.stdout"
  become: yes

- name: start and enable rocketchat
  service:
    name: rocketchat
    state: started
    enabled: yes
  become: yes
